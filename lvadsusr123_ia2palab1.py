# -*- coding: utf-8 -*-
"""LVADSUSR123_IA2PALAB1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1q3_JCsCzEqw2wuH78-GArmnGV4drNrx4
"""

import warnings
warnings.filterwarnings("ignore")
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score, precision_score, recall_score

data = pd.read_csv('/content/sample_data/winequality-red.csv')

#a
data.fillna(data.mean(), inplace=True)

# b
data['quality'] = data['quality'].apply(lambda x: 1 if x >= 7 else 0)

# d
correlation_matrix = data.corr()
relevant_features = correlation_matrix['quality'].sort_values(ascending=False).index[:5]
data = data[relevant_features]

# e
X = data.drop('quality', axis=1)
y = data['quality']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# f
k_values = [3, 5, 7, 9, 11]

for k in k_values:
    knn_model = KNeighborsClassifier(n_neighbors=k)
    knn_model.fit(X_train, y_train)

    y_pred_knn = knn_model.predict(X_test)

    accuracy_knn = accuracy_score(y_test, y_pred_knn)
    precision_knn = precision_score(y_test, y_pred_knn)
    recall_knn = recall_score(y_test, y_pred_knn)

    print(f"K-Nearest Neighbors model evaluation with K={k}:")
    print("Accuracy:", accuracy_knn)
    print("Precision:", precision_knn)
    print("Recall:", recall_knn)
    print()