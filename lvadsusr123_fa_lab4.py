# -*- coding: utf-8 -*-
"""LVADSUSR123_FA_LAB4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uGCIInJ1iDqHFT-d0H0rarMwPM2OvLI3
"""

import pandas as pd
import numpy as np
import warnings
warnings.filterwarnings('ignore')
from sklearn.ensemble import IsolationForest
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler

data = pd.read_csv("/content/sample_data/social_network.csv")

print(data.describe())
print()

missing_values = data.isnull().sum()
print("Missing values per column:\n", missing_values)
print()

data.fillna(data.mean(), inplace=True)

sns.heatmap(data.corr(), annot=True, cmap='coolwarm', fmt=".2f")
plt.title("Correlation Heatmap")
plt.show()
print()

sns.boxplot(data=data)
plt.title("Boxplot of Variables")
plt.xticks(rotation=45)
plt.show()
print()

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

features = ["login_activity", "posting_activity", "social_connections"]

model = IsolationForest(contamination=0.1, random_state=42)
model.fit(data[features])

data['Anomaly'] = model.predict(data[features])
data['Anomaly'] = data['Anomaly'].apply(lambda x: 'Anomaly' if x == -1 else 'Not Anomaly')

anomalies = data[data['Anomaly'] == 'Anomaly']
non_anomalies = data[data['Anomaly'] == 'Not Anomaly']

plt.scatter(non_anomalies["social_connections"], non_anomalies["posting_activity"], c='blue', label='Not Anomaly')
plt.scatter(anomalies["social_connections"], anomalies["posting_activity"], c='red', label='Anomaly')
plt.xlabel("Social Connections")
plt.ylabel("Posting Activity")
plt.title("Anomaly Detection")
plt.legend()
plt.show()

print(data)